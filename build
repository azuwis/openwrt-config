#!/bin/bash
set -e

# profiles
profiles=(mw4530r wg3526 wg3526_audit wg3526_debug wg3526_luci)
wg3526='wg3526 diffutils wpad'
wg3526_audit='wg3526 aircrack arp-scan diffutils dsniff ettercap iputils-arping mdk3 netdiscover nmap-ssl tcpdump tmux wpad'
wg3526_debug='wg3526 diffutils ethtool kallsyms kmod-sched-cake wpad'
wg3526_luci='wg3526 diffutils luci wpad'
mw4530r='mw4530r adblock bcp38 ddns diffutils dnsmasq freeradius mactelnet miniupnpd mwan nlbwmon shadowsocks sqm tcpdump watchcat wpad'

# targets
config_mw4530r='
CONFIG_TARGET_ar71xx=y
CONFIG_TARGET_ar71xx_generic=y
CONFIG_TARGET_ar71xx_generic_DEVICE_mw4530r-v1=y
'

config_wg3526='
CONFIG_TARGET_ramips=y
CONFIG_TARGET_ramips_mt7621=y
CONFIG_TARGET_ramips_mt7621_DEVICE_zbt-wg3526=y
'

# modules
config_adblock='
CONFIG_PACKAGE_adblock=y
CONFIG_PACKAGE_ca-bundle=y
CONFIG_PACKAGE_libustream-openssl=y
'

config_aircrack='
CONFIG_PACKAGE_aircrack-ng=y
CONFIG_PACKAGE_airmon-ng=y
CONFIG_PACKAGE_grep=y
CONFIG_PACKAGE_kmod-tun=y
CONFIG_PACKAGE_pciutils=y
CONFIG_PACKAGE_procps-ng=y
CONFIG_PACKAGE_procps-ng-ps=y
# CONFIG_PACKAGE_procps-ng-free is not set
# CONFIG_PACKAGE_procps-ng-kill is not set
# CONFIG_PACKAGE_procps-ng-pgrep is not set
# CONFIG_PACKAGE_procps-ng-pkill is not set
# CONFIG_PACKAGE_procps-ng-pmap is not set
# CONFIG_PACKAGE_procps-ng-pwdx is not set
# CONFIG_PACKAGE_procps-ng-skill is not set
# CONFIG_PACKAGE_procps-ng-slabtop is not set
# CONFIG_PACKAGE_procps-ng-snice is not set
# CONFIG_PACKAGE_procps-ng-tload is not set
# CONFIG_PACKAGE_procps-ng-top is not set
# CONFIG_PACKAGE_procps-ng-uptime is not set
# CONFIG_PACKAGE_procps-ng-vmstat is not set
# CONFIG_PACKAGE_procps-ng-w is not set
# CONFIG_PACKAGE_procps-ng-watch is not set
CONFIG_PACKAGE_usbutils=y
'

config_ddns='
CONFIG_PACKAGE_ca-bundle=y
CONFIG_PACKAGE_ddns-scripts=y
'

config_dnsmasq='
# CONFIG_PACKAGE_dnsmasq is not set
CONFIG_PACKAGE_dnsmasq-full=y
CONFIG_PACKAGE_dnsmasq_full_ipset=y
# CONFIG_PACKAGE_dnsmasq_full_auth is not set
# CONFIG_PACKAGE_dnsmasq_full_conntrack is not set
# CONFIG_PACKAGE_dnsmasq_full_dhcpv6 is not set
# CONFIG_PACKAGE_dnsmasq_full_dnssec is not set
'

feed_ettercap='src-git oldpackages https://github.com/plntyk/oldpackages.git'

config_freeradius='
CONFIG_PACKAGE_freeradius3=y
CONFIG_PACKAGE_freeradius3-mod-always=y
CONFIG_PACKAGE_freeradius3-mod-attr-filter=y
CONFIG_PACKAGE_freeradius3-mod-eap=y
CONFIG_PACKAGE_freeradius3-mod-eap-mschapv2=y
CONFIG_PACKAGE_freeradius3-mod-eap-peap=y
CONFIG_PACKAGE_freeradius3-mod-eap-tls=y
CONFIG_PACKAGE_freeradius3-mod-files=y
CONFIG_PACKAGE_freeradius3-mod-mschap=y
'

config_kallsyms='CONFIG_KERNEL_KALLSYMS=y'

config_luci='
CONFIG_PACKAGE_luci=y
CONFIG_PACKAGE_luci-theme-material=y
CONFIG_LUCI_LANG_zh-cn=y
'

feed_luci2='src-git luci2 https://github.com/jow-/luci-ng.git'
config_luci2='CONFIG_PACKAGE_luci2-ui-base=y'

config_mactelnet='
CONFIG_PACKAGE_mac-telnet-client=y
CONFIG_PACKAGE_mac-telnet-discover=y
'

config_mwan='
CONFIG_PACKAGE_kmod-macvlan=y
CONFIG_PACKAGE_mwan3=y
'

feed_nlbwmon='src-git nlbwmon https://github.com/jow-/nlbwmon.git'
config_nlbwmon='CONFIG_PACKAGE_nlbwmon=y'

config_shadowsocks='
CONFIG_PACKAGE_shadowsocks-libev=y
CONFIG_PACKAGE_unbound=y
'

config_sqm='
CONFIG_PACKAGE_kmod-sched-cake=y
CONFIG_PACKAGE_sqm-scripts=y
'

config_wpad='
# CONFIG_PACKAGE_wpad-mini is not set
CONFIG_PACKAGE_wpad=y
CONFIG_WPA_MSG_MIN_PRIORITY=1
CONFIG_WPA_SUPPLICANT_OPENSSL=y
'

generate_config() {
    local target="$@"

    local module
    for module in $target
    do
        config="config_$module"
        config="${!config}"
        if [ -n "$config" ]
        then
            echo "$config"
        else
            echo "CONFIG_PACKAGE_${module}=y"
        fi
    done
}

update_source() {
    local target="$@"

    git pull --rebase origin master
    cp feeds.conf.default feeds.conf

    local module
    for module in $target
    do
        feed="feed_$module"
        feed="${!feed}"
        if [ -n "$feed" ]
        then
            echo "$feed" >> feeds.conf
        fi
    done
    ./scripts/feeds update -a

    for dir in $(awk '/^src-git / {print $2}' feeds.conf)
    do
        cd "feeds/$dir"
        git rebase origin/master
        cd ../../
    done

    ./scripts/feeds install -a
}

while getopts ":gu" option
do
    case "$option" in
        g) generate_only="yes" ;;
        u) update_source="yes" ;;
    esac
done
shift "$((OPTIND-1))"

targets="$@"
if [ -z "$targets" ]
then
    for i in "${!profiles[@]}"
    do
        printf "%s %s\n" "[$((i+1))]" "${profiles[$i]}"
    done
    echo -en "\ntargets:\033[1A\radd: "
    while read i
    do
        if [ "$i" = '' ]
        then
            break
        fi
        targets="${profiles[$((i-1))]} $targets"
        echo -en "targets: ${targets}\033[1A\033[2K\radd: "
    done
    if [ -z "$targets" ]
    then
        targets="${profiles[0]}"
    fi
    echo
fi

for target in $targets
do
    modules="${!target}"
    if [ -z "$modules" ]
    then
        echo "No target found: $target"
        exit 1
    fi

    if [ "$update_source" = "yes" ]; then
        update_source "$modules"
    fi

    generate_config "$modules" > .config
    make defconfig
    ./scripts/diffconfig.sh

    if [ "$generate_only" != "yes" ]
    then
        extra_image_name="${target#*_}"
        if [ "$extra_image_name" == "$target" ]
        then
            make -j12
        else
            make -j12 EXTRA_IMAGE_NAME="$extra_image_name"
        fi
    fi
done
