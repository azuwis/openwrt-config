#!/bin/bash
# PRE:
# 1) telnet  2) passwd 3) reboot

DEBUG=''
GEN_ONLY='no'
KEEP='rm'
modules="$(ls -1 [1-9][0-9]-*)"
local_modules="$(ls -1 0[0-9]-*)"

target="$1"
if [ -f "$target" ]; then
    source "$target"
    shift
else
    echo "$target not exists"
    exit
fi

if [ -f "${target}.gpg" ]; then
    source <(gpg --batch --no-tty -qd "${target}.gpg")
else
    echo "$target.gpg not exist"
fi

scp="scp -pq"
ssh="ssh"
if [ x"$port" != x ]; then
    scp="scp -pqP$port"
    ssh="ssh -p$port"
fi

while getopts ":gh:km:p:x" Option
do
    case "$Option" in
        h) host="$OPTARG" ;;
        g) GEN_ONLY='yes' ;;
        k) KEEP='echo keep remote' ;;
        m) modules="$OPTARG" ;;
        p) ssh="ssh -p$OPTARG" ;;
        x) DEBUG='-x' ;;
    esac
done

backup() {
    $ssh "$host" 'sysupgrade --create-backup -' | tar zxf -
}

push() {
    src="$1"
    dest="$2"
    if [ ! -e "$src" ]; then
        echo "push: $src does not exist"
        return
    fi
    md5sum_src=$(md5sum "$src" | cut -d' ' -f1)
    md5sum_dest=$($ssh -n "$host" "md5sum $dest 2>/dev/null | cut -d' ' -f1")
    if [ x"$md5sum_src" != x"$md5sum_dest" ]; then
        echo "push: $src -> $dest"
        $scp "$src" "${host}:${dest}"
    fi
}

generate_script() {
    cat functions
    cat <<EOF
# ----------------------------------------------------------
EOF
    for module in $modules
    do
        cat <<EOF
echo "Begin remote $module"
echo
EOF
        if [ -x "$module" ]; then
            "./$module"
        else
            envsubst < "$module"
        fi
        cat <<EOF
hr
# ----------------------------------------------------------
EOF
    done
}

if [ "$GEN_ONLY" = 'yes' ]; then
    generate_script
    exit
fi

for local_module in $local_modules
do
    echo "Begin local  $local_module"
    echo
    if [ x"$DEBUG" != x ]; then
        set -x
    fi
    source "$local_module"
    if [ x"$DEBUG" != x ]; then
        set +x
    fi
    printf '%s\n' ------------------------------------------------------------
done

generate_script | $ssh "$host" 's=/tmp/openwrt-config; cat > $s; sh '$DEBUG' $s; '$KEEP' $s'
